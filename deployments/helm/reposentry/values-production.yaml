# Production values for reposentry
# Override default values for production deployment

# Image configuration
image:
  repository: reposentry/reposentry
  tag: "0.1.0"
  pullPolicy: Always

# Replica configuration
replicaCount: 2

# Resource limits for production
resources:
  limits:
    cpu: 1000m
    memory: 1Gi
  requests:
    cpu: 200m
    memory: 256Mi

# Enable autoscaling
autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 5
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

# Enable PDB for high availability
podDisruptionBudget:
  enabled: true
  minAvailable: 1

# Persistence for production
persistence:
  enabled: true
  storageClass: "fast-ssd"
  size: 50Gi
  accessMode: ReadWriteOnce

# Production configuration
config:
  app:
    logLevel: info
    logFormat: json
    logFile: /app/logs/reposentry.log

  polling:
    interval: "5m"
    timeout: "60s"
    maxWorkers: 5
    batchSize: 10
    retryAttempts: 5
    retryBackoff: "5s"

  storage:
    sqlite:
      maxConnections: 20
      connectionTimeout: "60s"

  tekton:
    eventListenerURL: "https://tekton.prod.company.com/webhook"
    timeout: "60s"
    headers:
      X-Environment: "production"
      X-Source: "reposentry"

  repositories:
    - name: main-app
      url: "https://github.com/company/main-app"
      provider: "github"
      token: "${GITHUB_TOKEN}"
      branchRegex: "^(main|release/.*)$"
      pollingInterval: "3m"
    
    - name: backend-service
      url: "https://gitlab.company.com/backend/service"
      provider: "gitlab"
      token: "${GITLAB_TOKEN}"
      branchRegex: "^(main|staging|production)$"
      pollingInterval: "5m"

# Secrets for production
secrets:
  create: true
  data:
    GITHUB_TOKEN: ""  # Set via sealed-secrets or external-secrets
    GITLAB_TOKEN: ""  # Set via sealed-secrets or external-secrets

# Ingress for production
ingress:
  enabled: true
  className: "nginx"
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  hosts:
    - host: reposentry.company.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: reposentry-tls
      hosts:
        - reposentry.company.com

# Service configuration
service:
  type: ClusterIP
  port: 80
  targetPort: 8080

# Security hardening
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000
  seccompProfile:
    type: RuntimeDefault

securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  capabilities:
    drop:
      - ALL

# Network policy for security
networkPolicy:
  enabled: true
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: ingress-nginx
      ports:
        - protocol: TCP
          port: 8080
  egress:
    - to: []  # Allow all egress for GitHub/GitLab API calls
      ports:
        - protocol: TCP
          port: 443
        - protocol: TCP
          port: 80

# Monitoring
serviceMonitor:
  enabled: true
  interval: 30s
  labels:
    monitoring: prometheus

# Node affinity for production
affinity:
  nodeAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        preference:
          matchExpressions:
            - key: node-type
              operator: In
              values:
                - worker

# Tolerations for dedicated nodes
tolerations:
  - key: "dedicated"
    operator: "Equal"
    value: "reposentry"
    effect: "NoSchedule"

# Additional environment variables
env:
  - name: TZ
    value: "UTC"
  - name: RS_ENVIRONMENT
    value: "production"
