apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: reposentry-bootstrap-run
  namespace: reposentry-system
  labels:
    reposentry.io/component: "bootstrap"
    reposentry.io/type: "task"
spec:
  description: "Create and trigger user Pipeline execution with standard workspace binding"
  params:
  - name: target-namespace
    type: string
  - name: pipeline-name
    type: string
  - name: repo-url
    type: string
  - name: repo-branch
    type: string
  - name: commit-sha
    type: string
  steps:
  - name: create-pipelinerun
    image: bitnami/kubectl:1.28
    script: |
      #!/bin/bash
      set -e
      NAMESPACE="$(params.target-namespace)"
      PIPELINE="$(params.pipeline-name)"
      REPO_URL="$(params.repo-url)"
      REPO_BRANCH="$(params.repo-branch)"
      COMMIT_SHA="$(params.commit-sha)"
      SHORT_SHA=$(echo "$COMMIT_SHA" | cut -c1-8)
      TIMESTAMP=$(date +%s)
      
      PIPELINERUN_NAME="${PIPELINE}-auto-${TIMESTAMP}"
      
      echo "ğŸš€ Creating PipelineRun in namespace $NAMESPACE"
      echo "Pipeline: $PIPELINE"
      echo "Repository: $REPO_URL"
      echo "Branch: $REPO_BRANCH"
      echo "Commit: $COMMIT_SHA"
      echo ""
      
      # Create PipelineRun with standard shared-data workspace (5Gi)
      echo "ğŸ”§ Creating PipelineRun with standard workspace binding..."
      echo "   Workspace: shared-data (5Gi)"
      
      # Create the PipelineRun YAML file
      cat > /tmp/pipelinerun.yaml << 'EOF'
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  name: PLACEHOLDER_NAME
  namespace: PLACEHOLDER_NAMESPACE
  labels:
    reposentry.io/triggered-by: "bootstrap-pipeline"
    reposentry.io/commit-sha: "PLACEHOLDER_SHORT_SHA"
    tekton.dev/pipeline: "PLACEHOLDER_PIPELINE"
  annotations:
    reposentry.io/repository-url: "PLACEHOLDER_REPO_URL"
    reposentry.io/source-branch: "PLACEHOLDER_REPO_BRANCH"
    reposentry.io/commit-sha: "PLACEHOLDER_COMMIT_SHA"
    reposentry.io/workspace-capacity: "5Gi"
spec:
  pipelineRef:
    name: PLACEHOLDER_PIPELINE
  params:
  - name: git-url
    value: "PLACEHOLDER_REPO_URL"
  - name: git-revision
    value: "PLACEHOLDER_COMMIT_SHA"
  - name: git-short-sha
    value: "PLACEHOLDER_SHORT_SHA"
  workspaces:
  - name: shared-data
    volumeClaimTemplate:
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 5Gi
EOF
      
      # Replace placeholders
      sed -i "s/PLACEHOLDER_NAME/$PIPELINERUN_NAME/g" /tmp/pipelinerun.yaml
      sed -i "s/PLACEHOLDER_NAMESPACE/$NAMESPACE/g" /tmp/pipelinerun.yaml
      sed -i "s/PLACEHOLDER_PIPELINE/$PIPELINE/g" /tmp/pipelinerun.yaml
      sed -i "s|PLACEHOLDER_REPO_URL|$REPO_URL|g" /tmp/pipelinerun.yaml
      sed -i "s/PLACEHOLDER_REPO_BRANCH/$REPO_BRANCH/g" /tmp/pipelinerun.yaml
      sed -i "s/PLACEHOLDER_COMMIT_SHA/$COMMIT_SHA/g" /tmp/pipelinerun.yaml
      sed -i "s/PLACEHOLDER_SHORT_SHA/$SHORT_SHA/g" /tmp/pipelinerun.yaml
      
      # Apply the PipelineRun
      kubectl apply -f /tmp/pipelinerun.yaml
      
      echo ""
      echo "âœ… PipelineRun created successfully!"
      echo "ğŸ”— View in Tekton Dashboard:"
      echo "   http://tekton.10.78.14.61.nip.io/#/namespaces/$NAMESPACE/pipelineruns/$PIPELINERUN_NAME"
      echo ""
      echo "ğŸ“Š Monitor progress:"
      echo "   kubectl get pipelinerun $PIPELINERUN_NAME -n $NAMESPACE"
      echo "   kubectl logs pipelinerun/$PIPELINERUN_NAME -n $NAMESPACE -f"
      echo ""
      echo "ğŸ’¾ Workspace configuration:"
      echo "   Name: shared-data"
      echo "   Capacity: 5Gi"
      echo "   Access mode: ReadWriteOnce"

